A system is running one task every day. Every task is independent of the previous tasks. The tasks can fail or succeed.

Write an SQL query to generate a report of period_state for each continuous interval of days in the period from 2019-01-01 to 2019-12-31.

period_state is 'failed' if tasks in this interval failed or 'succeeded' if tasks in this interval succeeded. Interval of days are retrieved as start_date and end_date.

Return the result table ordered by start_date.

The query result format is in the following example.

 

Example 1:

Input: 
Failed table:
+-------------------+
| fail_date         |
+-------------------+
| 2018-12-28        |
| 2018-12-29        |
| 2019-01-04        |
| 2019-01-05        |
+-------------------+
Succeeded table:
+-------------------+
| success_date      |
+-------------------+
| 2018-12-30        |
| 2018-12-31        |
| 2019-01-01        |
| 2019-01-02        |
| 2019-01-03        |
| 2019-01-06        |
+-------------------+
Output: 
+--------------+--------------+--------------+
| period_state | start_date   | end_date     |
+--------------+--------------+--------------+
| succeeded    | 2019-01-01   | 2019-01-03   |
| failed       | 2019-01-04   | 2019-01-05   |
| succeeded    | 2019-01-06   | 2019-01-06   |
+--------------+--------------+--------------+
Explanation: 
The report ignored the system state in 2018 as we care about the system in the period 2019-01-01 to 2019-12-31.
From 2019-01-01 to 2019-01-03 all tasks succeeded and the system state was "succeeded".
From 2019-01-04 to 2019-01-05 all tasks failed and the system state was "failed".
From 2019-01-06 to 2019-01-06 all tasks succeeded and the system state was "succeeded".

#SUBDATE(date, INTERVAL value unit) 日期相減
#OR: SUBDATE(date, days)
 
(SELECT 'failed' as period_state,
MIN(fail_date) as  start_date,
MAX(fail_date) as end_date
FROM (SELECT fail_date, SUBDATE(fail_date, INTERVAL
ROW_NUMBER() OVER (ORDER BY fail_date) DAY) diff  
#continuous interval of days
FROM Failed
WHERE fail_date BETWEEN '2019-01-01' AND '2019-12-31') t
GROUP BY diff)
UNION
(SELECT 'succeeded' as period_state,
MIN(success_date) as start_date,
MAX(success_date) as end_date
FROM (SELECT success_date, SUBDATE(success_date, INTERVAL
ROW_NUMBER() OVER (ORDER BY success_date) DAY) diff #continuous interval of days
FROM Succeeded
WHERE success_date BETWEEN '2019-01-01' AND '2019-12-31') t
GROUP BY diff)
ORDER BY start_date
