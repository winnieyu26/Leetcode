Write an SQL query to find the id and the name of active users.

Active users are those who logged in to their accounts for 5 or more consecutive days.

Return the result table ordered by the id.

The query result format is in the following example:

Accounts table:
+----+----------+
| id | name     |
+----+----------+
| 1  | Winston  |
| 7  | Jonathan |
+----+----------+

Logins table:
+----+------------+
| id | login_date |
+----+------------+
| 7  | 2020-05-30 |
| 1  | 2020-05-30 |
| 7  | 2020-05-31 |
| 7  | 2020-06-01 |
| 7  | 2020-06-02 |
| 7  | 2020-06-02 |
| 7  | 2020-06-03 |
| 1  | 2020-06-07 |
| 7  | 2020-06-10 |
+----+------------+

Result table:
+----+----------+
| id | name     |
+----+----------+
| 7  | Jonathan |
+----+----------+
User Winston with id = 1 logged in 2 times only in 2 different days, so, Winston is not an active user.
User Jonathan with id = 7 logged in 7 times in 6 different days, five of them were consecutive days, so, Jonathan is an active user.
Follow up question:
Can you write a general solution if the active users are those who logged in to their accounts for n or more consecutive days?



来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/active-users

+----+------------+----+------------++----+------------++----+------------+
# Write your MySQL query statement below

# Write your MySQL query statement below

# 隔天 想到 LEAD() 寫下一天的 col 
# 用 DATEDIFF() 去掉

WITH t as(
select *,
LEAD(login_date, 4) OVER(Partition BY id ORDER BY login_date ) nxt_login,
# LEAD(__,4) 代表第五行往上移到下一個col
DATEDIFF(LEAD(login_date,4) OVER(Partition BY id ORDER BY login_date),
# DATEDIFF (__, __) as diff 在下面表可以選 
        login_date) AS diff
FROM Logins
Group by id, login_date)  
# group by id跟 login_date 要去重複 因為有人同id 同一天登入

select DISTINCT t.id, name #一樣要去重複
FROM Accounts a 
LEFT JOIN t 
ON a.id = t.id
where diff = 4   # 1/1, 1/2,.. 1/5 五天裡 = 1/5 - 1/1 = 4 所以這裡是4 
ORDER BY id



