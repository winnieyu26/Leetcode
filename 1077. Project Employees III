Table: Project

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| project_id  | int     |
| employee_id | int     |
+-------------+---------+
(project_id, employee_id) is the primary key of this table.
employee_id is a foreign key to Employee table.
Table: Employee

+------------------+---------+
| Column Name      | Type    |
+------------------+---------+
| employee_id      | int     |
| name             | varchar |
| experience_years | int     |
+------------------+---------+
employee_id is the primary key of this table.
 

Write an SQL query that reports the most experienced employees in each project. In case of a tie, report all employees with the maximum number of experience years.

The query result format is in the following example:

Project table:
+-------------+-------------+
| project_id  | employee_id |
+-------------+-------------+
| 1           | 1           |
| 1           | 2           |
| 1           | 3           |
| 2           | 1           |
| 2           | 4           |
+-------------+-------------+

Employee table:
+-------------+--------+------------------+
| employee_id | name   | experience_years |
+-------------+--------+------------------+
| 1           | Khaled | 3                |
| 2           | Ali    | 2                |
| 3           | John   | 3                |
| 4           | Doe    | 2                |
+-------------+--------+------------------+

Result table:
+-------------+---------------+
| project_id  | employee_id   |
+-------------+---------------+
| 1           | 1             |
| 1           | 3             |
| 2           | 1             |
+-------------+---------------+
Both employees with id 1 and 3 have the most experience among the employees of the first project. For the second project, the employee with id 1 has the most experience.

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/project-employees-iii


# Write your MySQL query statement below

# 法1
select project_id, employee_id 
#或是  newtable.project_id as project_id, newtable.employee_id as employee_id 但太複雜
from
(select p.project_id, e.employee_id, # 不用 e.experience_years
dense_rank() over (partition by p.project_id order by e.experience_years desc) rnk
from Project p
left join Employee e ON p.employee_id = e.employee_id  # 或是 join project using(employee_id).see 法2
) as newtable
where rnk = 1


# 法2
select project_id,employee_id from
(
select project_id,employee_id,
dense_rank() over(partition by project_id order by experience_years DESC) as rk 
from employee join project using(employee_id)
)as newtable
where rk=1




