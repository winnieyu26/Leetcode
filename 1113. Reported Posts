Table: Actions

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| user_id       | int     |
| post_id       | int     |
| action_date   | date    | 
| action        | enum    |
| extra         | varchar |
+---------------+---------+
There is no primary key for this table, it may have duplicate rows.
The action column is an ENUM type of ('view', 'like', 'reaction', 'comment', 'report', 'share').
The extra column has optional information about the action such as a reason for report or a type of reaction. 
 

Write an SQL query that reports the number of posts reported yesterday for each report reason. Assume today is 2019-07-05.

The query result format is in the following example:

Actions table:
+---------+---------+-------------+--------+--------+
| user_id | post_id | action_date | action | extra  |
+---------+---------+-------------+--------+--------+
| 1       | 1       | 2019-07-01  | view   | null   |
| 1       | 1       | 2019-07-01  | like   | null   |
| 1       | 1       | 2019-07-01  | share  | null   |
| 2       | 4       | 2019-07-04  | view   | null   |
| 2       | 4       | 2019-07-04  | report | spam   |
| 3       | 4       | 2019-07-04  | view   | null   |
| 3       | 4       | 2019-07-04  | report | spam   |
| 4       | 3       | 2019-07-02  | view   | null   |
| 4       | 3       | 2019-07-02  | report | spam   |
| 5       | 2       | 2019-07-04  | view   | null   |
| 5       | 2       | 2019-07-04  | report | racism |
| 5       | 5       | 2019-07-04  | view   | null   |
| 5       | 5       | 2019-07-04  | report | racism |
+---------+---------+-------------+--------+--------+

Result table:
+---------------+--------------+
| report_reason | report_count |
+---------------+--------------+
| spam          | 1            |
| racism        | 2            |
+---------------+--------------+ 
Note that we only care about report reasons with non zero number of reports.

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/reported-posts


# Write your MySQL query statement below
# 法 1 
SELECT extra AS report_reason, 
      COUNT(DISTINCT post_id) AS report_count  # 當時沒考慮到  COUNT(DISTINCT __) 可能重複
FROM Actions
WHERE extra IS NOT NULL             # 當時沒考慮到 ＮＵＬＬ
    AND action = 'report'           # 是报告活动
    AND action_date = '2019-07-04'  # 昨天：可以直接寫日期, 或是 datediff('2019-07-05',action_date) = 1
GROUP BY extra                       #或是命名的 report_reason
;


# datediff(前日期, 後日期) ＝ 前日期 - 後日期

# 跑了几次发现spam的report_count都是2，最后发现原因是select行里面要count(distinct post_id)。
# 因为2019-07-04 原表中这天有两个spam，但是post_id都是4。


