Table: Orders

+-----------------+----------+
| Column Name     | Type     |
+-----------------+----------+
| order_number    | int      |
| customer_number | int      |
+-----------------+----------+
order_number is the primary key for this table.
This table contains information about the order ID and the customer ID.
 

Write an SQL query to find the customer_number for the customer who has placed the largest number of orders.

It is guaranteed that exactly one customer will have placed more orders than any other customer.

The query result format is in the following example:

 
Orders table:
+--------------+-----------------+
| order_number | customer_number |
+--------------+-----------------+
| 1            | 1               |
| 2            | 2               |
| 3            | 3               |
| 4            | 3               |
+--------------+-----------------+

Result table:
+-----------------+
| customer_number |
+-----------------+
| 3               |
+-----------------+
The customer with number 3 has two orders, which is greater than either customer 1 or 2 because each of them only has one order. 
So the result is customer_number 3.
 

Follow up: What if more than one customer have the largest number of orders, can you find all the customer_number in this case?


来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/customer-placing-the-largest-number-of-orders


######
NOTE: 
1. Use group by
2. order by
3. limit 1

在 MySQL 中， LIMIT 语句可以被用来限制 SELECT 语句的返回行数。
1 个或 2 个非负整数参数，第一个参数 offset 表示跳过前面多少行后开始取数据，
第二个参数表示最多返回多少行的数据。默认 offset 为 0（不是 1）。

将它们按照订单数目降序排序之后，第一条记录的 customer_number 就是ANS: --> 用Limit 
LIMIT 1  = 第一行


SELECT
    customer_number
FROM
    orders
GROUP BY customer_number  --- 不是group by order_number 
Order by "COUNT(*)" desc    -- NOTE: 大的先 = 大到小 Order by "COUNT(*)數的" desc
limit 1
 
方法一：group by + Limit函数。
先将 customer_number 组合（group by）起来。
排序（order by）第一行就是customer_number 了。
最后使用 Limit 函数，限制我们返回的行数（因为我们只需要返回第一行，也就是最多的客户，剩下的不用管）。
Limit函数的写法是：Limit x, y。x 是跳过前面的几行开始返回（这里要返回第一行，所以要跳过 0 行）；y 是返回的行数（这里只需要返回一行）。
先放SQL代码，思路简单易懂。


SELECT customer_number
FROM
(SELECT customer_number,RANK() OVER (ORDER BY COUNT(customer_number) DESC) as order_num
FROM orders
GROUP BY customer_number)t
WHERE t.order_num = 1

作者：qing-chen-xiang-wan-gui
链接：https://leetcode-cn.com/problems/customer-placing-the-largest-number-of-orders/solution/yong-chuang-kou-han-shu-jie-jue-bing-lie-di-yi-de-/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

# Write your MySQL query statement below
select customer_number
from orders
group by customer_number
order by count(customer_number) DESC
Limit 0, 1;


